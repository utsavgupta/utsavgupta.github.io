<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>distributed systems on Utsav Gupta</title>
    <link>https://utsavgupta.in/tags/distributed-systems/</link>
    <description>Recent content in distributed systems on Utsav Gupta</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 13 Mar 2022 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://utsavgupta.in/tags/distributed-systems/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Lessons learnt from replaying ELB logs at scale</title>
      <link>https://utsavgupta.in/blog/lessons-learnt-from-replaying-elb-logs-at-scale/</link>
      <pubDate>Sun, 13 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://utsavgupta.in/blog/lessons-learnt-from-replaying-elb-logs-at-scale/</guid>
      <description>As part of our exercise of porting a Kotlin application to Go, we wanted to test the port by mirroring production traffic to it in lower environments. Our applications are hosted on AWS, and initially the platform team had considered VPC mirroring to accomplish this goal. However, the option turned out to be infeasible for reasons unbeknownst to me.
We resorted to replaying ELB log messages from one environment to another.</description>
    </item>
    
    <item>
      <title>Leader election</title>
      <link>https://utsavgupta.in/blog/leader-election/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://utsavgupta.in/blog/leader-election/</guid>
      <description>Photo by Markus Spiske on Unsplash -- Recently all our services were replicated to multiple data centers on Google Cloud Platform. The REST API services scaled well without any code changes. However the batch jobs and their schedulers needed attention to ensure we avoid any kind of race conditions.
Leader election is ubiquitous in today&amp;rsquo;s world of distributed computing. Knowingly or unknowingly we use a multitude of tools that make use of leader election to ensure systems run like clockwork.</description>
    </item>
    
  </channel>
</rss>