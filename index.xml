<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Utsav Gupta</title>
    <link>https://utsavgupta.in/</link>
    <description>Recent content on Utsav Gupta</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 13 Mar 2022 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://utsavgupta.in/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Lessons learnt from replaying ELB logs at scale</title>
      <link>https://utsavgupta.in/blog/lessons-learnt-from-replaying-elb-logs-at-scale/</link>
      <pubDate>Sun, 13 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://utsavgupta.in/blog/lessons-learnt-from-replaying-elb-logs-at-scale/</guid>
      <description>As part of our exercise of porting a Kotlin application to Go, we wanted to test the port by mirroring production traffic to it in lower environments. Our applications are hosted on AWS, and initially the platform team had considered VPC mirroring to accomplish this goal. However, the option turned out to be infeasible for reasons unbeknownst to me.
We resorted to re-playing ELB log messages from one environment to another.</description>
    </item>
    
    <item>
      <title>Leader election</title>
      <link>https://utsavgupta.in/blog/leader-election/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://utsavgupta.in/blog/leader-election/</guid>
      <description>Photo by Markus Spiske on Unsplash -- Recently all our services were replicated to multiple data centers on Google Cloud Platform. The REST API services scaled well without any code changes. However the batch jobs and their schedulers needed attention to ensure we avoid any kind of race conditions.
Leader election is ubiquitous in today&amp;rsquo;s world of distributed computing. Knowingly or unknowingly we use a multitude of tools that make use of leader election to ensure systems run like clockwork.</description>
    </item>
    
    <item>
      <title>Installing a multinode Kubernetes cluster using kubeadm</title>
      <link>https://utsavgupta.in/blog/installing-multinode-kubernetes-cluster-kubeadm/</link>
      <pubDate>Wed, 29 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://utsavgupta.in/blog/installing-multinode-kubernetes-cluster-kubeadm/</guid>
      <description>I have been playing around with Kubernetes in various settings for almost three years. Majority of it in production. Where the infrastructure was either setup and configured by experienced platform engineers, or it was hosted on Google as GKE clusters. My interaction with Kubernetes has been limited to mostly handling the deployments that I work on.
Recently I decided to start learning Kubernetes at a greater depth. So what better place to start than installing and configuring a multi node cluster on my laptop?</description>
    </item>
    
    <item>
      <title>Privacy Policy</title>
      <link>https://utsavgupta.in/privacy/</link>
      <pubDate>Tue, 17 Mar 2020 22:10:51 +0100</pubDate>
      
      <guid>https://utsavgupta.in/privacy/</guid>
      <description>This web site does not collect any data from its visitors. It does not use trackers for analytics or advertisements.</description>
    </item>
    
    <item>
      <title>Unison: A Datastore migration library for Google Go</title>
      <link>https://utsavgupta.in/blog/unison-datastore-migration-go/</link>
      <pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://utsavgupta.in/blog/unison-datastore-migration-go/</guid>
      <description>Unison is a lightweight library that allows you to version and manage your Datastore migrations. In this blog article we will have a look at how you can install the Unison command line tool and get started migrating entities to Datastore.
Note: At the time of writing this article the library was not compatible with Google Firestore.
Before we begin, the article assumes that you have Google Go installed on your computer.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://utsavgupta.in/about/</link>
      <pubDate>Fri, 06 Mar 2020 22:00:58 +0100</pubDate>
      
      <guid>https://utsavgupta.in/about/</guid>
      <description>I am a polyglot programmer with professional experience in designing and developing scalable microservices. I am interested in architecting and developing solutions for the cloud. I also have a keen interest in SRE(Site Reliability Engineering) practices.
I am experienced in building and maintaining enterprise level platform services. My project work includes developing an OAuth2 and SAML 2.0 compliant identity and access management system for a top German wholesaler, and a custom built ci/cd platform for one of Germany&amp;rsquo;s largest discount retailers.</description>
    </item>
    
  </channel>
</rss>